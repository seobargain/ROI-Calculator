{"ast":null,"code":"var _jsxFileName = \"/Users/sanjeebchetri/Desktop/calculator-main/calculator-main/src/Calculator.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Layout from \"./Layout\";\nimport FormCard from './FormCard';\nimport ResultCard from './ResultCard';\nimport DataViz from './DataViz';\nimport PdfForm from './PdfForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst RoiCalculatorER = () => {\n  _s();\n  const [results, setResults] = useState(null);\n  const [metrics, setMetrics] = useState({\n    industry: '',\n    numberOfEmployees: 0,\n    averageSalary: 0,\n    currentTurnoverRate: 0,\n    expectedTurnoverReduction: 0,\n    costOfTurnover: 0,\n    revenuePerEmployee: 0,\n    expectedProductivityIncrease: 0,\n    currentAbsenteeismDays: 0,\n    expectedAbsenteeismReduction: 0,\n    dailyCostOfAbsenteeism: 0,\n    monthlySubscriptionFee: 0,\n    percentageForRewards: 0,\n    additionalProgramCosts: 0\n  });\n  const industryDefaults = {\n    'tech': {\n      numberOfEmployees: 500,\n      averageSalary: 85000,\n      currentTurnoverRate: 15,\n      expectedTurnoverReduction: 25,\n      costOfTurnover: 75,\n      revenuePerEmployee: 150000,\n      expectedProductivityIncrease: 8,\n      currentAbsenteeismDays: 8,\n      expectedAbsenteeismReduction: 30,\n      dailyCostOfAbsenteeism: 300,\n      monthlySubscriptionFee: 8,\n      percentageForRewards: 70,\n      additionalProgramCosts: 15000\n    },\n    'finance': {\n      numberOfEmployees: 600,\n      averageSalary: 75000,\n      currentTurnoverRate: 12,\n      expectedTurnoverReduction: 20,\n      costOfTurnover: 90,\n      revenuePerEmployee: 180000,\n      expectedProductivityIncrease: 7,\n      currentAbsenteeismDays: 6,\n      expectedAbsenteeismReduction: 25,\n      dailyCostOfAbsenteeism: 350,\n      monthlySubscriptionFee: 10,\n      percentageForRewards: 60,\n      additionalProgramCosts: 18000\n    },\n    'healthcare': {\n      numberOfEmployees: 1000,\n      averageSalary: 65000,\n      currentTurnoverRate: 22,\n      expectedTurnoverReduction: 30,\n      costOfTurnover: 85,\n      revenuePerEmployee: 120000,\n      expectedProductivityIncrease: 6,\n      currentAbsenteeismDays: 12,\n      expectedAbsenteeismReduction: 35,\n      dailyCostOfAbsenteeism: 250,\n      monthlySubscriptionFee: 6,\n      percentageForRewards: 75,\n      additionalProgramCosts: 20000\n    },\n    'retail': {\n      numberOfEmployees: 800,\n      averageSalary: 35000,\n      currentTurnoverRate: 35,\n      expectedTurnoverReduction: 40,\n      costOfTurnover: 50,\n      revenuePerEmployee: 80000,\n      expectedProductivityIncrease: 10,\n      currentAbsenteeismDays: 10,\n      expectedAbsenteeismReduction: 25,\n      dailyCostOfAbsenteeism: 150,\n      monthlySubscriptionFee: 5,\n      percentageForRewards: 80,\n      additionalProgramCosts: 10000\n    },\n    'manufacturing': {\n      numberOfEmployees: 1200,\n      averageSalary: 55000,\n      currentTurnoverRate: 18,\n      expectedTurnoverReduction: 28,\n      costOfTurnover: 65,\n      revenuePerEmployee: 200000,\n      expectedProductivityIncrease: 12,\n      currentAbsenteeismDays: 9,\n      expectedAbsenteeismReduction: 40,\n      dailyCostOfAbsenteeism: 400,\n      monthlySubscriptionFee: 7,\n      percentageForRewards: 65,\n      additionalProgramCosts: 25000\n    }\n  };\n  const handleChange = (field, value) => {\n    if (field === 'industry') {\n      const defaults = industryDefaults[value] || {};\n      setMetrics({\n        industry: value,\n        ...defaults\n      });\n    } else {\n      setMetrics(prev => ({\n        ...prev,\n        [field]: typeof prev[field] === 'number' ? Number(value) : value\n      }));\n    }\n  };\n  const calculateRoi = () => {\n    const {\n      numberOfEmployees,\n      averageSalary,\n      currentTurnoverRate,\n      expectedTurnoverReduction,\n      costOfTurnover,\n      revenuePerEmployee,\n      expectedProductivityIncrease,\n      currentAbsenteeismDays,\n      expectedAbsenteeismReduction,\n      dailyCostOfAbsenteeism,\n      monthlySubscriptionFee,\n      percentageForRewards,\n      additionalProgramCosts\n    } = metrics;\n    const subscriptionCosts = numberOfEmployees * monthlySubscriptionFee * 12;\n    const rewardsBudget = numberOfEmployees * averageSalary * (percentageForRewards / 100) * 0.01;\n    const totalInvestment = subscriptionCosts + rewardsBudget + additionalProgramCosts;\n    const turnoverEmployees = numberOfEmployees * (currentTurnoverRate / 100);\n    const retainedEmployees = turnoverEmployees * (expectedTurnoverReduction / 100);\n    const costPerTurnover = averageSalary * (costOfTurnover / 100);\n    const retentionSavings = retainedEmployees * costPerTurnover;\n    const productivityGainPerEmployee = revenuePerEmployee * (expectedProductivityIncrease / 100);\n    const productivitySavings = productivityGainPerEmployee * numberOfEmployees;\n    const totalAbsenteeismDays = numberOfEmployees * currentAbsenteeismDays;\n    const reducedAbsenteeismDays = totalAbsenteeismDays * (expectedAbsenteeismReduction / 100);\n    const absenteeismSavings = reducedAbsenteeismDays * dailyCostOfAbsenteeism;\n    const totalSavings = retentionSavings + productivitySavings + absenteeismSavings;\n    const netSavings = totalSavings - totalInvestment;\n    const roi = netSavings / totalInvestment * 100;\n    setResults({\n      subscriptionCosts,\n      rewardsBudget,\n      additionalProgramCosts,\n      totalInvestment,\n      retentionSavings,\n      productivitySavings,\n      absenteeismSavings,\n      totalSavings,\n      netSavings,\n      roi,\n      metrics\n    });\n  };\n  useEffect(() => {\n    if (metrics.industry) {\n      calculateRoi();\n    }\n  }, [metrics]);\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-8\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(FormCard, {\n          title: \"Industry Selection\",\n          subtitle: \"Choose your industry to load default values\",\n          dropdownLabel: \"Industry\",\n          dropdownOptions: [{\n            value: 'tech',\n            label: 'Technology'\n          }, {\n            value: 'finance',\n            label: 'Finance'\n          }, {\n            value: 'healthcare',\n            label: 'Healthcare'\n          }, {\n            value: 'retail',\n            label: 'Retail'\n          }, {\n            value: 'manufacturing',\n            label: 'Manufacturing'\n          }],\n          values: metrics,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormCard, {\n          title: \"Company Information\",\n          subtitle: \"Basic information about your organization\",\n          fields: [{\n            name: 'numberOfEmployees',\n            label: 'Number of Employees',\n            type: 'number'\n          }, {\n            name: 'averageSalary',\n            label: 'Average Employee Salary ($)',\n            type: 'number'\n          }, {\n            name: 'revenuePerEmployee',\n            label: 'Revenue per Employee ($)',\n            type: 'number'\n          }],\n          values: metrics,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormCard, {\n          title: \"Employee Turnover Impact\",\n          subtitle: \"Current turnover rates and expected improvements\",\n          fields: [{\n            name: 'currentTurnoverRate',\n            label: 'Current Annual Turnover Rate (%)',\n            type: 'number'\n          }, {\n            name: 'expectedTurnoverReduction',\n            label: 'Expected Turnover Reduction (%)',\n            type: 'number'\n          }, {\n            name: 'costOfTurnover',\n            label: 'Cost of Turnover (% of salary)',\n            type: 'number'\n          }],\n          values: metrics,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormCard, {\n          title: \"Productivity & Absenteeism Impact\",\n          subtitle: \"Expected improvements from recognition\",\n          fields: [{\n            name: 'expectedProductivityIncrease',\n            label: 'Expected Productivity Increase (%)',\n            type: 'number'\n          }, {\n            name: 'currentAbsenteeismDays',\n            label: 'Current Absenteeism Days/Employee',\n            type: 'number'\n          }, {\n            name: 'expectedAbsenteeismReduction',\n            label: 'Expected Absenteeism Reduction (%)',\n            type: 'number'\n          }, {\n            name: 'dailyCostOfAbsenteeism',\n            label: 'Daily Cost of Absenteeism per Employee ($)',\n            type: 'number'\n          }],\n          values: metrics,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormCard, {\n          title: \"Program Costs\",\n          subtitle: \"Recognition program investment details\",\n          fields: [{\n            name: 'monthlySubscriptionFee',\n            label: 'Monthly Subscription per Employee ($)',\n            type: 'number'\n          }, {\n            name: 'percentageForRewards',\n            label: 'Percentage of Budget for Rewards (%)',\n            type: 'number'\n          }, {\n            name: 'additionalProgramCosts',\n            label: 'Additional Program Costs ($)',\n            type: 'number'\n          }],\n          values: metrics,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col space-y-8\",\n        children: [/*#__PURE__*/_jsxDEV(ResultCard, {\n          title: \"ROI Results\",\n          subtitle: \"Here's your ROI breakdown\",\n          result: results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(DataViz, {\n          title: \"Data Visualization\",\n          subtitle: \"Visual breakdown of your ROI analysis\",\n          result: results\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(PdfForm, {\n          title: \"Download Report\",\n          result: results,\n          metrics: metrics\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n};\n_s(RoiCalculatorER, \"qJTv7wr41MwPur0/K7R41VNxTcc=\");\n_c = RoiCalculatorER;\nexport default RoiCalculatorER;\nvar _c;\n$RefreshReg$(_c, \"RoiCalculatorER\");","map":{"version":3,"names":["React","useState","useEffect","Layout","FormCard","ResultCard","DataViz","PdfForm","jsxDEV","_jsxDEV","RoiCalculatorER","_s","results","setResults","metrics","setMetrics","industry","numberOfEmployees","averageSalary","currentTurnoverRate","expectedTurnoverReduction","costOfTurnover","revenuePerEmployee","expectedProductivityIncrease","currentAbsenteeismDays","expectedAbsenteeismReduction","dailyCostOfAbsenteeism","monthlySubscriptionFee","percentageForRewards","additionalProgramCosts","industryDefaults","handleChange","field","value","defaults","prev","Number","calculateRoi","subscriptionCosts","rewardsBudget","totalInvestment","turnoverEmployees","retainedEmployees","costPerTurnover","retentionSavings","productivityGainPerEmployee","productivitySavings","totalAbsenteeismDays","reducedAbsenteeismDays","absenteeismSavings","totalSavings","netSavings","roi","children","className","title","subtitle","dropdownLabel","dropdownOptions","label","values","onChange","fileName","_jsxFileName","lineNumber","columnNumber","fields","name","type","result","_c","$RefreshReg$"],"sources":["/Users/sanjeebchetri/Desktop/calculator-main/calculator-main/src/Calculator.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport Layout from \"./Layout\";\nimport FormCard from './FormCard';\nimport ResultCard from './ResultCard';\nimport DataViz from './DataViz';\nimport PdfForm from './PdfForm';\n\nconst RoiCalculatorER = () => {\n  const [results, setResults] = useState(null);\n  const [metrics, setMetrics] = useState({\n    industry: '',\n    numberOfEmployees: 0,\n    averageSalary: 0,\n    currentTurnoverRate: 0,\n    expectedTurnoverReduction: 0,\n    costOfTurnover: 0,\n    revenuePerEmployee: 0,\n    expectedProductivityIncrease: 0,\n    currentAbsenteeismDays: 0,\n    expectedAbsenteeismReduction: 0,\n    dailyCostOfAbsenteeism: 0,\n    monthlySubscriptionFee: 0,\n    percentageForRewards: 0,\n    additionalProgramCosts: 0\n  });\n\n  const industryDefaults = {\n    'tech': { numberOfEmployees: 500, averageSalary: 85000, currentTurnoverRate: 15, expectedTurnoverReduction: 25, costOfTurnover: 75, revenuePerEmployee: 150000, expectedProductivityIncrease: 8, currentAbsenteeismDays: 8, expectedAbsenteeismReduction: 30, dailyCostOfAbsenteeism: 300, monthlySubscriptionFee: 8, percentageForRewards: 70, additionalProgramCosts: 15000 },\n    'finance': { numberOfEmployees: 600, averageSalary: 75000, currentTurnoverRate: 12, expectedTurnoverReduction: 20, costOfTurnover: 90, revenuePerEmployee: 180000, expectedProductivityIncrease: 7, currentAbsenteeismDays: 6, expectedAbsenteeismReduction: 25, dailyCostOfAbsenteeism: 350, monthlySubscriptionFee: 10, percentageForRewards: 60, additionalProgramCosts: 18000 },\n    'healthcare': { numberOfEmployees: 1000, averageSalary: 65000, currentTurnoverRate: 22, expectedTurnoverReduction: 30, costOfTurnover: 85, revenuePerEmployee: 120000, expectedProductivityIncrease: 6, currentAbsenteeismDays: 12, expectedAbsenteeismReduction: 35, dailyCostOfAbsenteeism: 250, monthlySubscriptionFee: 6, percentageForRewards: 75, additionalProgramCosts: 20000 },\n    'retail': { numberOfEmployees: 800, averageSalary: 35000, currentTurnoverRate: 35, expectedTurnoverReduction: 40, costOfTurnover: 50, revenuePerEmployee: 80000, expectedProductivityIncrease: 10, currentAbsenteeismDays: 10, expectedAbsenteeismReduction: 25, dailyCostOfAbsenteeism: 150, monthlySubscriptionFee: 5, percentageForRewards: 80, additionalProgramCosts: 10000 },\n    'manufacturing': { numberOfEmployees: 1200, averageSalary: 55000, currentTurnoverRate: 18, expectedTurnoverReduction: 28, costOfTurnover: 65, revenuePerEmployee: 200000, expectedProductivityIncrease: 12, currentAbsenteeismDays: 9, expectedAbsenteeismReduction: 40, dailyCostOfAbsenteeism: 400, monthlySubscriptionFee: 7, percentageForRewards: 65, additionalProgramCosts: 25000 },\n  };\n\n  const handleChange = (field, value) => {\n    if (field === 'industry') {\n      const defaults = industryDefaults[value] || {};\n      setMetrics({ industry: value, ...defaults });\n    } else {\n      setMetrics(prev => ({ ...prev, [field]: typeof prev[field] === 'number' ? Number(value) : value }));\n    }\n  };\n\n  const calculateRoi = () => {\n    const { numberOfEmployees, averageSalary, currentTurnoverRate, expectedTurnoverReduction, costOfTurnover, revenuePerEmployee, expectedProductivityIncrease, currentAbsenteeismDays, expectedAbsenteeismReduction, dailyCostOfAbsenteeism, monthlySubscriptionFee, percentageForRewards, additionalProgramCosts } = metrics;\n    const subscriptionCosts = numberOfEmployees * monthlySubscriptionFee * 12;\n    const rewardsBudget = numberOfEmployees * averageSalary * (percentageForRewards / 100) * 0.01;\n    const totalInvestment = subscriptionCosts + rewardsBudget + additionalProgramCosts;\n    const turnoverEmployees = numberOfEmployees * (currentTurnoverRate / 100);\n    const retainedEmployees = turnoverEmployees * (expectedTurnoverReduction / 100);\n    const costPerTurnover = averageSalary * (costOfTurnover / 100);\n    const retentionSavings = retainedEmployees * costPerTurnover;\n    const productivityGainPerEmployee = revenuePerEmployee * (expectedProductivityIncrease / 100);\n    const productivitySavings = productivityGainPerEmployee * numberOfEmployees;\n    const totalAbsenteeismDays = numberOfEmployees * currentAbsenteeismDays;\n    const reducedAbsenteeismDays = totalAbsenteeismDays * (expectedAbsenteeismReduction / 100);\n    const absenteeismSavings = reducedAbsenteeismDays * dailyCostOfAbsenteeism;\n    const totalSavings = retentionSavings + productivitySavings + absenteeismSavings;\n    const netSavings = totalSavings - totalInvestment;\n    const roi = (netSavings / totalInvestment) * 100;\n    setResults({ subscriptionCosts, rewardsBudget, additionalProgramCosts, totalInvestment, retentionSavings, productivitySavings, absenteeismSavings, totalSavings, netSavings, roi, metrics });\n  };\n\n  useEffect(() => { if (metrics.industry) { calculateRoi(); } }, [metrics]);\n\n  return (\n    <Layout>\n      <div className=\"max-w-7xl mx-auto grid grid-cols-1 md:grid-cols-2 gap-8\">\n        <div className='flex flex-col space-y-8'>\n          <FormCard\n            title=\"Industry Selection\"\n            subtitle=\"Choose your industry to load default values\"\n            dropdownLabel=\"Industry\"\n            dropdownOptions={[\n              { value: 'tech', label: 'Technology' },\n              { value: 'finance', label: 'Finance' },\n              { value: 'healthcare', label: 'Healthcare' },\n              { value: 'retail', label: 'Retail' },\n              { value: 'manufacturing', label: 'Manufacturing' },\n            ]}\n            values={metrics}\n            onChange={handleChange}\n          />\n          <FormCard\n            title=\"Company Information\"\n            subtitle=\"Basic information about your organization\"\n            fields={[\n              { name: 'numberOfEmployees', label: 'Number of Employees', type: 'number' },\n              { name: 'averageSalary', label: 'Average Employee Salary ($)', type: 'number' },\n              { name: 'revenuePerEmployee', label: 'Revenue per Employee ($)', type: 'number' },\n            ]}\n            values={metrics}\n            onChange={handleChange}\n          />\n          <FormCard\n            title=\"Employee Turnover Impact\"\n            subtitle=\"Current turnover rates and expected improvements\"\n            fields={[\n              { name: 'currentTurnoverRate', label: 'Current Annual Turnover Rate (%)', type: 'number' },\n              { name: 'expectedTurnoverReduction', label: 'Expected Turnover Reduction (%)', type: 'number' },\n              { name: 'costOfTurnover', label: 'Cost of Turnover (% of salary)', type: 'number' },\n            ]}\n            values={metrics}\n            onChange={handleChange}\n          />\n          <FormCard\n            title=\"Productivity & Absenteeism Impact\"\n            subtitle=\"Expected improvements from recognition\"\n            fields={[\n              { name: 'expectedProductivityIncrease', label: 'Expected Productivity Increase (%)', type: 'number' },\n              { name: 'currentAbsenteeismDays', label: 'Current Absenteeism Days/Employee', type: 'number' },\n              { name: 'expectedAbsenteeismReduction', label: 'Expected Absenteeism Reduction (%)', type: 'number' },\n              { name: 'dailyCostOfAbsenteeism', label: 'Daily Cost of Absenteeism per Employee ($)', type: 'number' },\n            ]}\n            values={metrics}\n            onChange={handleChange}\n          />\n          <FormCard\n            title=\"Program Costs\"\n            subtitle=\"Recognition program investment details\"\n            fields={[\n              { name: 'monthlySubscriptionFee', label: 'Monthly Subscription per Employee ($)', type: 'number' },\n              { name: 'percentageForRewards', label: 'Percentage of Budget for Rewards (%)', type: 'number' },\n              { name: 'additionalProgramCosts', label: 'Additional Program Costs ($)', type: 'number' },\n            ]}\n            values={metrics}\n            onChange={handleChange}\n          />\n        </div>\n        <div className='flex flex-col space-y-8'>\n          <ResultCard\n            title=\"ROI Results\"\n            subtitle=\"Here's your ROI breakdown\"\n            result={results}\n          />\n          <DataViz\n            title=\"Data Visualization\"\n            subtitle=\"Visual breakdown of your ROI analysis\"\n            result={results}\n          />\n          <PdfForm\n            title=\"Download Report\"\n            result={results}\n            metrics={metrics}\n          />\n        </div>\n      </div>\n    </Layout>\n  );\n};\n\nexport default RoiCalculatorER;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}